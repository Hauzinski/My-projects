{"ast":null,"code":"import { map, mergeMap, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let GetVideoDataService = /*#__PURE__*/(() => {\n  class GetVideoDataService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router; // private apiKey: string = 'AIzaSyBWrP4EwVwKHY2ZJXm4o0oa_z4j4ttE7hA';\n\n      this.apiKey = 'AIzaSyA1i2_U2pt47w5g-cm-fJfgkRAz2vYqqgA'; // private apiKey: string = 'AIzaSyD7wJHmdLTLm1Gfv_B89Zg-IGsbn3Bnkfk';\n\n      this.maxResults = 0;\n      this.text = '';\n      this.videoUrl = `https://youtube.googleapis.com/youtube/v3/search?key=${this.apiKey}&part=snippet&type=video&maxResults=${this.maxResults}&q=${this.text}`;\n      this.videoDataUrl = `https://www.googleapis.com/youtube/v3/videos?key=${this.apiKey}&part=snippet,statistics&id=`;\n      this.videoData = [];\n      this.doneTypingInterval = 750;\n      this.minCharactersForSearch = 3;\n    }\n\n    getData() {\n      return this.videoData;\n    }\n\n    getVideoById(id) {\n      return this.http.get(this.videoDataUrl + id).pipe(map(videoData => {\n        return videoData.items;\n      }), catchError(() => {\n        return [];\n      }));\n    }\n\n    getVideoData() {\n      return this.http.get(this.videoUrl).pipe(map(videoData => {\n        return videoData.items.map(item => {\n          return item.id.videoId;\n        });\n      }), mergeMap(id => {\n        return this.getVideoById(id.join(','));\n      }), catchError(() => {\n        return [];\n      }));\n    }\n\n    getSearchResults(text) {\n      this.maxResults = 24;\n      this.text = text.toLocaleLowerCase().trim().replace(/ /gi, '+');\n      this.videoUrl = `https://youtube.googleapis.com/youtube/v3/search?key=${this.apiKey}&part=snippet&type=video&maxResults=${this.maxResults}&q=${this.text}`;\n      const subscription = this.getVideoData().subscribe(data => {\n        this.videoData = data;\n        subscription.unsubscribe();\n      });\n    }\n\n    search(value) {\n      if (value.length >= this.minCharactersForSearch) {\n        clearTimeout(this.typingTimer);\n        this.typingTimer = setTimeout(() => {\n          this.getSearchResults(value);\n          this.router.navigate(['main']);\n        }, this.doneTypingInterval);\n      }\n    }\n\n  }\n\n  GetVideoDataService.ɵfac = function GetVideoDataService_Factory(t) {\n    return new (t || GetVideoDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  GetVideoDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GetVideoDataService,\n    factory: GetVideoDataService.ɵfac\n  });\n  return GetVideoDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}