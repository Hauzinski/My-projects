{"version":3,"file":"235.6f65a6c2da26ecc99e73.bundle.js","mappings":"oHAAe,SAASA,EAAmBC,GACzC,MAAMC,EAASC,SAASF,EAAO,IACzBG,EAASC,OAAOH,EAAOI,gBAAgBC,WAAWC,MAAM,KAAK,IACnE,IAAIC,EAAU,GACVC,EAAe,EAEnB,OAAIL,OAAOM,MAAMT,GACR,KAGLE,GAAU,GACZM,EAAe,EACfD,EAAU,MACDL,GAAU,GACnBM,EAAe,EACfD,EAAU,MACDL,GAAU,IACnBM,EAAe,EACfD,EAAU,OAGJP,EAAS,IAAMQ,GAAcE,QAAQF,EAAe,EAAI,GAAKD,EACtE,C,gCCrBD,OAAgB,OAAS,uBAAuB,KAAO,uBAAuB,MAAQ,uBAAuB,gBAAgB,uBAAuB,iBAAiB,uBAAuB,aAAa,uBAAuB,aAAa,wB,UCG9N,SAASI,EAAT,GAAiD,IAAxB,KAAEC,GAAsB,EAC9D,OACE,iBAAKC,UAAWC,EAAAA,OAAe,aAAYF,EAAKG,MAAhD,WACE,gBAAKF,UAAS,UAAKC,EAAAA,KAAL,YAAoBA,EAAOF,EAAKI,WAC9C,cAAGH,UAAWC,EAAAA,MAAd,SAA6BhB,EAAmBc,EAAKK,WAG1D,CCPc,SAASC,EAAT,GAAsE,IAAvC,KAAEN,GAAqC,EACnF,MAAMO,EAAU,CACd,CACEH,MAAO,aACPC,MAAOL,EAAKQ,UACZL,MAAO,SAET,CACEC,MAAO,aACPC,MAAOL,EAAKS,UACZN,MAAO,SAET,CACEC,MAAO,gBACPC,MAAOL,EAAKU,aACZP,MAAO,YAET,CACEC,MAAO,iBACPC,MAAOL,EAAKW,cACZR,MAAO,cAIX,OACE,eAAIF,UC5BwB,uBD4B5B,SACGM,EAAQK,KAAKC,IACZ,yBACE,SAACd,EAAD,CAAiBC,KAAMa,KADhBA,EAAKV,UAMrB,C,iIE3Bc,SAASW,IACtB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAaC,GAAkBA,EAAMC,MAAMH,cACzDI,GAAWC,EAAAA,EAAAA,MACXC,EAAYN,EAAYO,MAAMrC,GAAUA,EAAM4B,KAAOA,IAErDU,EAAS,CACbrB,MAAO,sBACPsB,OAAQ,IAAML,EAAS,KACvBM,MAAO,+BAGT,OACE,iBAAK1B,UAAS,oBCtBa,wBDsB3B,UACGsB,IACC,iCACE,gBAAKtB,UCzB2N,uBDyBpM2B,KAAKC,EAAAA,EAAAA,GAAuBN,GAAYO,IAAKP,EAAUQ,QAAQ5B,SAC3F,eAAIF,UAAS,gBC1BuC,wBD0BpD,SAAyCsB,EAAUQ,QAAQ5B,SAC3D,cAAGF,UC3B+E,uBD2BlF,UE5ByBd,EF4BcoC,EAAUQ,QAAQC,YE3BpD,IAAIC,KAAK9C,GAGV+C,mBAFG,QAEwB,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,eFyBtFf,EAAUQ,QAAQQ,cACjB,iCACE,eAAItC,UC9BqH,uBD8BzH,2BACA,cAAGA,UC/B4L,uBD+B/L,SAAmCsB,EAAUQ,QAAQQ,kBAGzD,gBAAKtC,UClCyJ,uBDkC9J,UACE,SAACuC,EAAA,EAAD,CAAuBxC,KAAMuB,EAAUkB,gBAEzC,SAACC,EAAA,EAAD,CAAoB1C,KAAMyB,QAG5BF,IAAa,+CEzCN,IAAoBpC,CF4ClC,C,sBG1Cc,SAAS0C,EAAuB7B,GAAY,MACzD,MAEM2C,EAFa,CAAC,SAAU,WAAY,OAAQ,UAElBnB,MAAMrC,GAC7ByD,OAAOC,UAAUC,eAAeC,KAAK/C,EAAK+B,QAAQiB,WAAY7D,KAGvE,OAAO8D,OACLN,EAAY,UAAG3C,EAAK+B,QAAQiB,WAAWL,UAA3B,aAAG,EAA2DO,IAAMlD,EAAK+B,QAAQiB,WAAWG,QAE3G,C","sources":["webpack://youtube-client/./src/utils/formatVideoMetrics.ts","webpack://youtube-client/./src/components/VideoMetrics/Metric/Metric.module.scss?6609","webpack://youtube-client/./src/components/VideoMetrics/Metric/Metric.tsx","webpack://youtube-client/./src/components/VideoMetrics/VideoMetrics.tsx","webpack://youtube-client/./src/components/VideoMetrics/VideoMetrics.module.scss?ca61","webpack://youtube-client/./src/pages/VideoPage/VideoPage.tsx","webpack://youtube-client/./src/pages/VideoPage/VideoPage.module.scss?b5b1","webpack://youtube-client/./src/utils/formatDate.ts","webpack://youtube-client/./src/utils/getVideoImageThumbnail.ts"],"sourcesContent":["export default function formatVideoMetrics(value: string) {\r\n  const number = parseInt(value, 10);\r\n  const degree = Number(number.toExponential().toString().split('+')[1]);\r\n  let postfix = '';\r\n  let answerDegree = 0;\r\n\r\n  if (Number.isNaN(number)) {\r\n    return '-';\r\n  }\r\n\r\n  if (degree >= 9) {\r\n    answerDegree = 9;\r\n    postfix = ' B';\r\n  } else if (degree >= 6) {\r\n    answerDegree = 6;\r\n    postfix = ' M';\r\n  } else if (degree >= 3) {\r\n    answerDegree = 3;\r\n    postfix = ' K';\r\n  }\r\n\r\n  return (number / 10 ** answerDegree).toFixed(answerDegree ? 1 : 0) + postfix;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"metric\":\"S8eY6IP_T35j2zBIYEkA\",\"logo\":\"shpyMtxjkfBNkSaJLZZr\",\"count\":\"EI64uDkVdIYAk3PGAmY3\",\"logo-comments\":\"WOqlicuQepD6xcEh7jAu\",\"logo-favorites\":\"uaQ7zlkYcpqyRKjzUoAH\",\"logo-likes\":\"ZsqdDIIjsKmGJR72jCTg\",\"logo-views\":\"CFRW0qDh1ZrMvmXbN0wj\"};","import { IPropsMetric } from '../../../models/app.models';\r\nimport formatVideoMetrics from '../../../utils/formatVideoMetrics';\r\nimport styles from './Metric.module.scss';\r\n\r\nexport default function MetricComponent({ data }: IPropsMetric) {\r\n  return (\r\n    <div className={styles.metric} data-title={data.title}>\r\n      <div className={`${styles.logo} ${styles[data.class]}`} />\r\n      <p className={styles.count}>{formatVideoMetrics(data.count)}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { IPropsVideoMetricsComponent } from '../../models/app.models';\r\nimport MetricComponent from './Metric/Metric';\r\nimport styles from './VideoMetrics.module.scss';\r\n\r\nexport default function VideoMetricsComponent({ data }: IPropsVideoMetricsComponent) {\r\n  const metrics = [\r\n    {\r\n      class: 'logo-views',\r\n      count: data.viewCount,\r\n      title: 'Views',\r\n    },\r\n    {\r\n      class: 'logo-likes',\r\n      count: data.likeCount,\r\n      title: 'Likes',\r\n    },\r\n    {\r\n      class: 'logo-comments',\r\n      count: data.commentCount,\r\n      title: 'Comments',\r\n    },\r\n    {\r\n      class: 'logo-favorites',\r\n      count: data.favoriteCount,\r\n      title: 'Favorites',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ul className={styles['video-metrics']}>\r\n      {metrics.map((item) => (\r\n        <li key={item.title}>\r\n          <MetricComponent data={item} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"video-metrics\":\"fosciPMUuPRHvuZ0j2KJ\"};","import { useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router';\r\n\r\nimport ButtonSVGComponent from '../../components/ButtonSVG/ButtonSVG';\r\nimport VideoMetricsComponent from '../../components/VideoMetrics/VideoMetrics';\r\nimport { IState } from '../../models/store.models';\r\nimport formatDate from '../../utils/formatDate';\r\nimport getVideoImageThumbnail from '../../utils/getVideoImageThumbnail';\r\nimport styles from './VideoPage.module.scss';\r\n\r\nexport default function VideoPage() {\r\n  const { id } = useParams();\r\n  const requestData = useSelector((state: IState) => state.cache.requestData);\r\n  const navigate = useNavigate();\r\n  const videoData = requestData.find((value) => value.id === id);\r\n\r\n  const button = {\r\n    class: 'btn-video-page-back',\r\n    action: () => navigate('/'),\r\n    label: 'Return to main page options',\r\n  };\r\n\r\n  return (\r\n    <div className={`container ${styles['main-content']}`}>\r\n      {videoData && (\r\n        <>\r\n          <img className={styles.img} src={getVideoImageThumbnail(videoData)} alt={videoData.snippet.title} />\r\n          <h3 className={`title ${styles.title}`}>{videoData.snippet.title}</h3>\r\n          <p className={styles.date}>{formatDate(videoData.snippet.publishedAt)}</p>\r\n          {videoData.snippet.description && (\r\n            <>\r\n              <h4 className={styles['description-title']}>Description:</h4>\r\n              <p className={styles.description}>{videoData.snippet.description}</p>\r\n            </>\r\n          )}\r\n          <div className={styles.metrics}>\r\n            <VideoMetricsComponent data={videoData.statistics} />\r\n          </div>\r\n          <ButtonSVGComponent data={button} />\r\n        </>\r\n      )}\r\n      {!videoData && <p>Video not found!</p>}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main-content\":\"N8UM6bcUTrPdB4Uv7f19\",\"title\":\"dYLWdqayIsoKH6vo3rcw\",\"date\":\"PpbqXworv47Rf2V7iTre\",\"description-title\":\"jZp6WCI1LiVjtts0Nj8T\",\"metrics\":\"bMDkyaoHHPlZNvV3lhRU\",\"description\":\"E6EJSTEsSyV9x_LLW3Jk\",\"img\":\"A9RKv8N0GM0H4rhoTno1\"};","export default function formatDate(value: string) {\r\n  const date = new Date(value);\r\n  const locale = 'en-US';\r\n\r\n  return date.toLocaleDateString(locale, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\r\n}\r\n","import { Item, Thumbnails } from '../models/youtubeAPI.model';\r\n\r\nexport default function getVideoImageThumbnail(data: Item) {\r\n  const imageSizes = ['maxres', 'standard', 'high', 'medium'];\r\n\r\n  const maxImageSize = imageSizes.find((value: string) => {\r\n    return Object.prototype.hasOwnProperty.call(data.snippet.thumbnails, value);\r\n  });\r\n\r\n  return String(\r\n    maxImageSize ? data.snippet.thumbnails[maxImageSize as keyof Thumbnails]?.url : data.snippet.thumbnails.default\r\n  );\r\n}\r\n"],"names":["formatVideoMetrics","value","number","parseInt","degree","Number","toExponential","toString","split","postfix","answerDegree","isNaN","toFixed","MetricComponent","data","className","styles","title","class","count","VideoMetricsComponent","metrics","viewCount","likeCount","commentCount","favoriteCount","map","item","VideoPage","id","useParams","requestData","useSelector","state","cache","navigate","useNavigate","videoData","find","button","action","label","src","getVideoImageThumbnail","alt","snippet","publishedAt","Date","toLocaleDateString","weekday","year","month","day","description","VideoMetrics","statistics","ButtonSVG","maxImageSize","Object","prototype","hasOwnProperty","call","thumbnails","String","url","default"],"sourceRoot":""}