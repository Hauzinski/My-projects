{"version":3,"file":"504.3812c6d5a3a7eac42153.bundle.js","mappings":"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","sources":["webpack://youtube-client/./src/utils/formatVideoMetrics.ts","webpack://youtube-client/./src/components/VideoMetrics/Metric/Metric.module.scss?6609","webpack://youtube-client/./src/components/VideoMetrics/Metric/Metric.tsx","webpack://youtube-client/./src/components/VideoMetrics/VideoMetrics.tsx","webpack://youtube-client/./src/components/VideoMetrics/VideoMetrics.module.scss?ca61","webpack://youtube-client/./src/components/VideoItem/VideoItem.tsx","webpack://youtube-client/./src/components/VideoItem/VideoItem.module.scss?b5ee","webpack://youtube-client/./src/pages/VideoSearchPage/VideoSearchPage.tsx","webpack://youtube-client/./src/utils/hooks/useSort.ts","webpack://youtube-client/./src/utils/hooks/useSortByWord.ts","webpack://youtube-client/./src/utils/hooks/useSortByCount.ts","webpack://youtube-client/./src/pages/VideoSearchPage/VideoSearchPage.module.scss?f621","webpack://youtube-client/./src/utils/getVideoImageThumbnail.ts"],"sourcesContent":["export default function formatVideoMetrics(value: string) {\r\n  const number = parseInt(value, 10);\r\n  const degree = Number(number.toExponential().toString().split('+')[1]);\r\n  let postfix = '';\r\n  let answerDegree = 0;\r\n\r\n  if (Number.isNaN(number)) {\r\n    return '-';\r\n  }\r\n\r\n  if (degree >= 9) {\r\n    answerDegree = 9;\r\n    postfix = ' B';\r\n  } else if (degree >= 6) {\r\n    answerDegree = 6;\r\n    postfix = ' M';\r\n  } else if (degree >= 3) {\r\n    answerDegree = 3;\r\n    postfix = ' K';\r\n  }\r\n\r\n  return (number / 10 ** answerDegree).toFixed(answerDegree ? 1 : 0) + postfix;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"metric\":\"S8eY6IP_T35j2zBIYEkA\",\"logo\":\"shpyMtxjkfBNkSaJLZZr\",\"count\":\"EI64uDkVdIYAk3PGAmY3\",\"logo-comments\":\"WOqlicuQepD6xcEh7jAu\",\"logo-favorites\":\"uaQ7zlkYcpqyRKjzUoAH\",\"logo-likes\":\"ZsqdDIIjsKmGJR72jCTg\",\"logo-views\":\"CFRW0qDh1ZrMvmXbN0wj\"};","import { IPropsMetric } from '../../../models/app.models';\r\nimport formatVideoMetrics from '../../../utils/formatVideoMetrics';\r\nimport styles from './Metric.module.scss';\r\n\r\nexport default function MetricComponent({ data }: IPropsMetric) {\r\n  return (\r\n    <div className={styles.metric} data-title={data.title}>\r\n      <div className={`${styles.logo} ${styles[data.class]}`} />\r\n      <p className={styles.count}>{formatVideoMetrics(data.count)}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { IPropsVideoMetricsComponent } from '../../models/app.models';\r\nimport MetricComponent from './Metric/Metric';\r\nimport styles from './VideoMetrics.module.scss';\r\n\r\nexport default function VideoMetricsComponent({ data }: IPropsVideoMetricsComponent) {\r\n  const metrics = [\r\n    {\r\n      class: 'logo-views',\r\n      count: data.viewCount,\r\n      title: 'Views',\r\n    },\r\n    {\r\n      class: 'logo-likes',\r\n      count: data.likeCount,\r\n      title: 'Likes',\r\n    },\r\n    {\r\n      class: 'logo-comments',\r\n      count: data.commentCount,\r\n      title: 'Comments',\r\n    },\r\n    {\r\n      class: 'logo-favorites',\r\n      count: data.favoriteCount,\r\n      title: 'Favorites',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ul className={styles['video-metrics']}>\r\n      {metrics.map((item) => (\r\n        <li key={item.title}>\r\n          <MetricComponent data={item} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"video-metrics\":\"fosciPMUuPRHvuZ0j2KJ\"};","import { useNavigate } from 'react-router';\r\n\r\nimport { IPropsVideoItemComponent } from '../../models/app.models';\r\nimport getVideoImageThumbnail from '../../utils/getVideoImageThumbnail';\r\nimport VideoMetricsComponent from '../VideoMetrics/VideoMetrics';\r\nimport styles from './VideoItem.module.scss';\r\n\r\nexport default function VideoItemComponent({ data }: IPropsVideoItemComponent) {\r\n  const navigate = useNavigate();\r\n\r\n  function selectVideo() {\r\n    navigate(`/videos/${data.id}`);\r\n  }\r\n\r\n  return (\r\n    <div className={styles['video-item']}>\r\n      <img className={styles['video-item-img']} src={getVideoImageThumbnail(data)} alt={data.snippet.title} />\r\n      <VideoMetricsComponent data={data.statistics} />\r\n      <h3 className={`title ${styles['video-item-title']}`}>{data.snippet.title}</h3>\r\n      <button className={`button ${styles['video-item-button']}`} type=\"button\" onClick={selectVideo}>\r\n        more...\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"video-item\":\"ZFK788lI4xaaGr6YY8BJ\",\"video-item-img\":\"gqUhSobX2QENeCZtLnRL\",\"video-item-button\":\"h2uh6NPB4zrgrLfQqzqR\",\"video-item-title\":\"pta0R428o1a6ACx0mf6A\"};","import VideoItemComponent from '../../components/VideoItem/VideoItem';\r\nimport useSort from '../../utils/hooks/useSort';\r\nimport styles from './VideoSearchPage.module.scss';\r\n\r\nexport default function VideoSearchPage() {\r\n  const sortedVideoData = useSort();\r\n\r\n  return (\r\n    <div className={`container ${styles['main-content']}`}>\r\n      {sortedVideoData.map((item) => (\r\n        <VideoItemComponent key={item.id} data={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { IState } from '../../models/store.models';\r\nimport useSortByCount from './useSortByCount';\r\nimport useSortByWord from './useSortByWord';\r\n\r\nexport default function useSort() {\r\n  const data = useSelector((state: IState) => state.cache.requestData);\r\n  const newArray = [...data];\r\n  const sortByWord = useSortByWord();\r\n\r\n  useSortByCount(newArray);\r\n  return sortByWord(newArray);\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { IState } from '../../models/store.models';\r\nimport { Item } from '../../models/youtubeAPI.model';\r\n\r\nexport default function useSortByWord() {\r\n  const word = useSelector((state: IState) => state.sortFilters.byWord);\r\n\r\n  return (data: Item[]) => {\r\n    return data.filter((item) => {\r\n      const videoTitle = item.snippet.title.toLowerCase();\r\n\r\n      return videoTitle.includes(word.toLowerCase());\r\n    });\r\n  };\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { IState, IStateSortFilters } from '../../models/store.models';\r\nimport { Item, Statistics } from '../../models/youtubeAPI.model';\r\n\r\nexport default function useSortByCount(data: Item[]) {\r\n  const searchFilters = useSelector((state: IState) => state.sortFilters);\r\n\r\n  const filterTypes: { [key: string]: string } = {\r\n    byViews: 'viewCount',\r\n    byLikes: 'likeCount',\r\n    byComments: 'commentCount',\r\n  };\r\n\r\n  Object.keys(searchFilters).forEach((filter) => {\r\n    if (filter === 'byWord' || searchFilters[filter as keyof IStateSortFilters] === 'off') {\r\n      return;\r\n    }\r\n\r\n    const sortingType = searchFilters[filter as keyof IStateSortFilters] === 'ascending' ? 1 : -1;\r\n\r\n    if (filter === 'byDate') {\r\n      data.sort((a, b) => sortingType * (Date.parse(a.snippet.publishedAt) - Date.parse(b.snippet.publishedAt)));\r\n    } else {\r\n      data.sort(\r\n        (a, b) =>\r\n          sortingType *\r\n          (Number(a.statistics[filterTypes[filter as keyof Statistics]]) -\r\n            Number(b.statistics[filterTypes[filter as keyof Statistics]]))\r\n      );\r\n    }\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main-content\":\"doJqBA3I4xTXMv4czKva\"};","import { Item, Thumbnails } from '../models/youtubeAPI.model';\r\n\r\nexport default function getVideoImageThumbnail(data: Item) {\r\n  const imageSizes = ['maxres', 'standard', 'high', 'medium'];\r\n\r\n  const maxImageSize = imageSizes.find((value: string) => {\r\n    return Object.prototype.hasOwnProperty.call(data.snippet.thumbnails, value);\r\n  });\r\n\r\n  return String(\r\n    maxImageSize ? data.snippet.thumbnails[maxImageSize as keyof Thumbnails]?.url : data.snippet.thumbnails.default\r\n  );\r\n}\r\n"],"names":["formatVideoMetrics","value","number","parseInt","degree","Number","toExponential","toString","split","postfix","answerDegree","isNaN","toFixed","MetricComponent","data","className","styles","title","class","count","VideoMetricsComponent","metrics","viewCount","likeCount","commentCount","favoriteCount","map","item","VideoItemComponent","navigate","useNavigate","src","getVideoImageThumbnail","alt","snippet","VideoMetrics","statistics","type","onClick","id","VideoSearchPage","sortedVideoData","newArray","useSelector","state","cache","requestData","sortByWord","word","sortFilters","byWord","filter","toLowerCase","includes","useSortByWord","searchFilters","filterTypes","byViews","byLikes","byComments","Object","keys","forEach","sortingType","sort","a","b","Date","parse","publishedAt","useSortByCount","useSort","maxImageSize","find","prototype","hasOwnProperty","call","thumbnails","String","url","default"],"sourceRoot":""}